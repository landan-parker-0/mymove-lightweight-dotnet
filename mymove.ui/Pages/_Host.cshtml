@page "/"
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Authentication
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@namespace mymove.ui.Pages
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>MyMove</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <meta charset="utf-8" />
    <base href="/" />
    <link href="css/app.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="favicon.png" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Rowdies:wght@300;400&display=swap" rel="stylesheet">
    <link href="@(this.GetType().Assembly.GetName().Name).styles.css" rel="stylesheet" />
    <script src="https://kit.fontawesome.com/bf19b81e66.js" crossorigin="anonymous"></script>
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    <component type="typeof(App)" render-mode="ServerPrerendered" />
    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">ðŸ—™</a>
    </div>
    <script src="_framework/blazor.server.js"></script>
    <script type="text/javascript">
         
        var interval = setInterval(() => {
            try{
                window.Blazor.defaultReconnectionHandler.onConnectionDown = function () {
                    window.location.reload();
                };
            }catch{
                return;
            }

            clearInterval(interval);
        }, 100);

        function FocusElement(elem){
            document.getElementById(elem).focus();
        }

        function ScrollToTop(elem) {
            var src = document.getElementById(elem);
            setTimeout(() => src.scrollIntoView({ behavior: "instant", block: "start" }), 30)
        }

        function ResetScroll(elem) {
            var src = document.getElementById(elem);
            src.scrollTop = 0;
        }
    </script>
</body>
</html>